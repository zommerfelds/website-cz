service: website-cz

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iamRoleStatements: # permissions for all functions
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource:
        - Ref: WebsiteChristianContact

package:
  exclude:
    - client/**
    - secrets.yml

functions:
  contact:
    handler: backend/contact.sendEmail
    events:
      - http:
          path: contact
          method: post
          cors: true
    environment:
      RECAPTCHA_SECRET: ${env:RECAPTCHA_SECRET}
      CORS_ORIGIN: '*' # Could put http://christian.zommerfelds.com, but there is no security benefit in this case
    custom:
      env-resources:
        - WebsiteChristianContact

plugins:
  - serverless-finch
  - serverless-resources-env

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  client:
    bucketName: christian.zommerfelds.com

resources:
  # CloudFormation template syntax
  Resources:
    WebsiteChristianContact:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
        - Endpoint: ${env:CONTACT_EMAIL}
          Protocol: email
    InvocationErrors:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: WebsiteChristianContact
        ComparisonOperator: GreaterThanThreshold
        Dimensions:
          - Name: FunctionName
            Value: # ${self:service}-${self:custom.stage}-contact
              Ref: ContactLambdaFunction  # assume this is the internal resource name given by Serverless
        EvaluationPeriods: 1
        MetricName: Errors
        Namespace: AWS/Lambda
        Period: 300
        Statistic: Sum
        Threshold: 0
    LogFilterErrors:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: WebsiteChristianContact
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        MetricName: LogErrors
        Namespace: WebsiteCZ
        Period: 300
        Statistic: Sum
        Threshold: 0
    LogFilterMetric:
      Type: AWS::Logs::MetricFilter
      DependsOn: ContactLambdaFunction  # assume this is the internal resource name given by Serverless
      Properties:
        FilterPattern: "ERROR"
        LogGroupName: "/aws/lambda/${self:service}-${self:custom.stage}-contact" # TODO: don't hard code this
        MetricTransformations:
          - MetricName: LogErrors
            MetricNamespace: WebsiteCZ
            MetricValue: 1
    SnsErrors:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: WebsiteChristianContact
        ComparisonOperator: GreaterThanThreshold
        Dimensions:
          - Name: TopicName
            Value:
              Ref: WebsiteChristianContact
        EvaluationPeriods: 1
        MetricName: NumberOfNotificationsFailed
        Namespace: AWS/SNS
        Period: 300
        Statistic: Sum
        Threshold: 0
    ApiErrors:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: WebsiteChristianContact
        ComparisonOperator: GreaterThanThreshold
        Dimensions:
          - Name: ApiName
            Value:
              Ref: ApiGatewayRestApi
        EvaluationPeriods: 1
        MetricName: 5XXError
        Namespace: AWS/ApiGateway
        Period: 300
        Statistic: Sum
        Threshold: 0
    ClientBucket4xxErrors:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: WebsiteChristianContact
        ComparisonOperator: GreaterThanThreshold
        Dimensions:
          - Name: BucketName
            Value: ${self:custom.client.bucketName}
        EvaluationPeriods: 1
        MetricName: 4xxErrors
        Namespace: AWS/S3
        Period: 300
        Statistic: Sum
        Threshold: 0
    ClientBucket5xxErrors:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmActions:
          - Ref: WebsiteChristianContact
        ComparisonOperator: GreaterThanThreshold
        Dimensions:
          - Name: BucketName
            Value: ${self:custom.client.bucketName}
        EvaluationPeriods: 1
        MetricName: 5xxErrors
        Namespace: AWS/S3
        Period: 300
        Statistic: Sum
        Threshold: 0
